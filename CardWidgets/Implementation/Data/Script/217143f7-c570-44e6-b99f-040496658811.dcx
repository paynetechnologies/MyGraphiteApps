<?xml version="1.0" encoding="utf-8"?>
<DataChangeDefinition DataChangeId="217143f7-c570-44e6-b99f-040496658811" Version="1" Created="637006946961845330">
  <Script Type="Schema"><![CDATA[USE [master]


IF EXISTS (SELECT * FROM sys.databases WHERE name = N'MyCardWidgetsDb') BEGIN
   ALTER DATABASE [MyCardWidgetsDb] SET SINGLE_USER WITH ROLLBACK IMMEDIATE
   DROP DATABASE [MyCardWidgetsDb]
END


GO


IF NOT EXISTS (SELECT * FROM sys.databases WHERE name = N'MyCardWidgetsDb') BEGIN
   CREATE DATABASE [MyCardWidgetsDb]
END


GO


ALTER DATABASE [MyCardWidgetsDb] SET ALLOW_SNAPSHOT_ISOLATION ON
ALTER DATABASE [MyCardWidgetsDb] SET READ_COMMITTED_SNAPSHOT ON

GO


USE [MyCardWidgetsDb]


IF schema_id('GraphiteGTCCore') IS NULL
    EXECUTE('CREATE SCHEMA [GraphiteGTCCore]')
CREATE TABLE [GraphiteGTCCore].[Comparison] (
    [Id] [int] NOT NULL IDENTITY,
    [Description] [nvarchar](max) NOT NULL,
    [EventRegistrationId] [int] NOT NULL,
    [TimeStamp] rowversion,
    [ObjectId] [nvarchar](40) NOT NULL,
    CONSTRAINT [PK_GraphiteGTCCore.Comparison] PRIMARY KEY ([Id])
)
CREATE TABLE [dbo].[EventRegistration] (
    [EventRegistrationId] [int] NOT NULL IDENTITY,
    [InputsXml] [nvarchar](max),
    [TimeStamp] rowversion,
    [EventInformationXml] [nvarchar](max),
    [EventProcessId] [int],
    [EffectiveDate] [datetime] NOT NULL,
    [AddedByUserId] [int],
    [AddedTime] [datetime],
    [ModifiedByUserId] [int],
    [ModifiedTime] [datetime],
    [ExecutedByUserId] [int],
    [ExecutedDate] [datetime],
    [ExecutionStartTime] [datetime],
    [ExecutionEndTime] [datetime],
    [IsComplete] [bit] NOT NULL,
    [ScheduledByEventRegistrationId] [int],
    [ReversedEventRegistrationId] [int],
    [ResetToPendingEventRegistrationId] [int],
    [DeletedByEventRegistrationId] [int],
    CONSTRAINT [PK_dbo.EventRegistration] PRIMARY KEY ([EventRegistrationId])
)
IF schema_id('CardWidgets') IS NULL
    EXECUTE('CREATE SCHEMA [CardWidgets]')
CREATE TABLE [CardWidgets].[User] (
    [Id] [int] NOT NULL IDENTITY,
    [Username] [nvarchar](max) NOT NULL,
    [LanguageId] [int],
    [ThemeId] [int],
    [ActiveId] [int],
    [PersonId] [int],
    [EventRegistrationId] [int] NOT NULL,
    [TimeStamp] rowversion,
    [ObjectId] [nvarchar](40) NOT NULL,
    CONSTRAINT [PK_CardWidgets.User] PRIMARY KEY ([Id])
)
CREATE TABLE [GraphiteGTCCore].[YesNoQuestion] (
    [Id] [int] NOT NULL IDENTITY,
    [Description] [nvarchar](max) NOT NULL,
    [EventRegistrationId] [int] NOT NULL,
    [TimeStamp] rowversion,
    [ObjectId] [nvarchar](40) NOT NULL,
    CONSTRAINT [PK_GraphiteGTCCore.YesNoQuestion] PRIMARY KEY ([Id])
)
CREATE TABLE [GraphiteGTCCore].[Language] (
    [Id] [int] NOT NULL IDENTITY,
    [Code] [nvarchar](max) NOT NULL,
    [Name] [nvarchar](max) NOT NULL,
    [EventRegistrationId] [int] NOT NULL,
    [TimeStamp] rowversion,
    [ObjectId] [nvarchar](40) NOT NULL,
    CONSTRAINT [PK_GraphiteGTCCore.Language] PRIMARY KEY ([Id])
)
CREATE TABLE [GraphiteGTCCore].[Person] (
    [Id] [int] NOT NULL IDENTITY,
    [FirstName] [nvarchar](max),
    [LastName] [nvarchar](max),
    [EventRegistrationId] [int] NOT NULL,
    [TimeStamp] rowversion,
    [ObjectId] [nvarchar](40) NOT NULL,
    CONSTRAINT [PK_GraphiteGTCCore.Person] PRIMARY KEY ([Id])
)
CREATE TABLE [CardWidgets].[Theme] (
    [Id] [int] NOT NULL IDENTITY,
    [Description] [nvarchar](max) NOT NULL,
    [EventRegistrationId] [int] NOT NULL,
    [TimeStamp] rowversion,
    [ObjectId] [nvarchar](40) NOT NULL,
    CONSTRAINT [PK_CardWidgets.Theme] PRIMARY KEY ([Id])
)
CREATE TABLE [dbo].[EventProcess] (
    [Id] [int] NOT NULL IDENTITY,
    [Name] [nvarchar](max) NOT NULL,
    [DisplayName] [nvarchar](max),
    [Tags] [nvarchar](max),
    [ExecutionPriority] [int],
    [InputView] [nvarchar](max),
    [ResultView] [nvarchar](max),
    [EventRegistrationId] [int] NOT NULL,
    [TimeStamp] rowversion,
    [ObjectId] [nvarchar](max),
    CONSTRAINT [PK_dbo.EventProcess] PRIMARY KEY ([Id])
)
CREATE TABLE [dbo].[ValidationResult] (
    [Id] [int] NOT NULL IDENTITY,
    [Name] [nvarchar](max),
    [Description] [nvarchar](max),
    [IsErrorId] [int],
    [SeverityLevel] [nvarchar](max),
    [Message] [nvarchar](max),
    [Category] [nvarchar](max),
    [Fix] [nvarchar](max),
    [TestXML] [nvarchar](max),
    [IsSuppressedId] [int],
    [IsOverriddenId] [int],
    [IsOverridableId] [int],
    [OverriddenByUserId] [int],
    [EventRegistrationId] [int] NOT NULL,
    CONSTRAINT [PK_dbo.ValidationResult] PRIMARY KEY ([Id])
)
CREATE TABLE [GraphiteGTCCore].[ComparisonHistory] (
    [Id] [int] NOT NULL,
    [Version] [int] NOT NULL,
    [Description] [nvarchar](max),
    [EventRegistrationId] [int] NOT NULL,
    [Operation] [nvarchar](max) NOT NULL,
    [TimeStamp] [varbinary](max) NOT NULL,
    [ObjectId] [nvarchar](max) NOT NULL,
    CONSTRAINT [PK_GraphiteGTCCore.ComparisonHistory] PRIMARY KEY ([Id], [Version])
)
CREATE TABLE [GraphiteGTCCore].[CurrencyDefinition] (
    [Id] [int] NOT NULL IDENTITY,
    [Symbol] [nvarchar](max),
    [MinorUnits] [int] NOT NULL,
    [Code] [nvarchar](max) NOT NULL,
    [EventRegistrationId] [int] NOT NULL,
    [TimeStamp] rowversion,
    [ObjectId] [nvarchar](40) NOT NULL,
    CONSTRAINT [PK_GraphiteGTCCore.CurrencyDefinition] PRIMARY KEY ([Id])
)
CREATE TABLE [GraphiteGTCCore].[CurrencyDefinitionHistory] (
    [Id] [int] NOT NULL,
    [Version] [int] NOT NULL,
    [Symbol] [nvarchar](max),
    [MinorUnits] [int] NOT NULL,
    [Code] [nvarchar](max),
    [EventRegistrationId] [int] NOT NULL,
    [Operation] [nvarchar](max) NOT NULL,
    [TimeStamp] [varbinary](max) NOT NULL,
    [ObjectId] [nvarchar](max) NOT NULL,
    CONSTRAINT [PK_GraphiteGTCCore.CurrencyDefinitionHistory] PRIMARY KEY ([Id], [Version])
)
CREATE TABLE [dbo].[EventProcessHistory] (
    [Id] [int] NOT NULL,
    [Version] [int] NOT NULL,
    [Name] [nvarchar](max),
    [DisplayName] [nvarchar](max),
    [Tags] [nvarchar](max),
    [ExecutionPriority] [int],
    [InputView] [nvarchar](max),
    [ResultView] [nvarchar](max),
    [EventRegistrationId] [int] NOT NULL,
    [Operation] [nvarchar](max),
    [TimeStamp] [varbinary](max),
    [ObjectId] [nvarchar](max),
    CONSTRAINT [PK_dbo.EventProcessHistory] PRIMARY KEY ([Id], [Version])
)
CREATE TABLE [GraphiteGTCCore].[LanguageHistory] (
    [Id] [int] NOT NULL,
    [Version] [int] NOT NULL,
    [Code] [nvarchar](max),
    [Name] [nvarchar](max),
    [EventRegistrationId] [int] NOT NULL,
    [Operation] [nvarchar](max) NOT NULL,
    [TimeStamp] [varbinary](max) NOT NULL,
    [ObjectId] [nvarchar](max) NOT NULL,
    CONSTRAINT [PK_GraphiteGTCCore.LanguageHistory] PRIMARY KEY ([Id], [Version])
)
CREATE TABLE [CardWidgets].[PageChoice] (
    [Id] [int] NOT NULL IDENTITY,
    [Description] [nvarchar](max) NOT NULL,
    [Display] [nvarchar](max),
    [EventRegistrationId] [int] NOT NULL,
    [TimeStamp] rowversion,
    [ObjectId] [nvarchar](40) NOT NULL,
    CONSTRAINT [PK_CardWidgets.PageChoice] PRIMARY KEY ([Id])
)
CREATE TABLE [CardWidgets].[PageChoiceHistory] (
    [Id] [int] NOT NULL,
    [Version] [int] NOT NULL,
    [Description] [nvarchar](max),
    [Display] [nvarchar](max),
    [EventRegistrationId] [int] NOT NULL,
    [Operation] [nvarchar](max) NOT NULL,
    [TimeStamp] [varbinary](max) NOT NULL,
    [ObjectId] [nvarchar](max) NOT NULL,
    CONSTRAINT [PK_CardWidgets.PageChoiceHistory] PRIMARY KEY ([Id], [Version])
)
CREATE TABLE [GraphiteGTCCore].[PersonHistory] (
    [Id] [int] NOT NULL,
    [Version] [int] NOT NULL,
    [FirstName] [nvarchar](max),
    [LastName] [nvarchar](max),
    [EventRegistrationId] [int] NOT NULL,
    [Operation] [nvarchar](max) NOT NULL,
    [TimeStamp] [varbinary](max) NOT NULL,
    [ObjectId] [nvarchar](max) NOT NULL,
    CONSTRAINT [PK_GraphiteGTCCore.PersonHistory] PRIMARY KEY ([Id], [Version])
)
CREATE TABLE [CardWidgets].[PropertyChangeDetail] (
    [Id] [int] NOT NULL IDENTITY,
    [ExecutionEndTime] [datetime] NOT NULL,
    [OriginalVersion] [int] NOT NULL,
    [NewVersion] [int] NOT NULL,
    [OriginalValue] [nvarchar](max) NOT NULL,
    [NewValue] [nvarchar](max) NOT NULL,
    [ExecutedByUserId] [int],
    [EventRegistrationId] [int] NOT NULL,
    [TimeStamp] rowversion,
    [ObjectId] [nvarchar](40) NOT NULL,
    CONSTRAINT [PK_CardWidgets.PropertyChangeDetail] PRIMARY KEY ([Id])
)
CREATE TABLE [CardWidgets].[PropertyChangeDetailHistory] (
    [Id] [int] NOT NULL,
    [Version] [int] NOT NULL,
    [ExecutedByUserId] [int],
    [ExecutionEndTime] [datetime] NOT NULL,
    [OriginalVersion] [int] NOT NULL,
    [NewVersion] [int] NOT NULL,
    [OriginalValue] [nvarchar](max),
    [NewValue] [nvarchar](max),
    [EventRegistrationId] [int] NOT NULL,
    [Operation] [nvarchar](max) NOT NULL,
    [TimeStamp] [varbinary](max) NOT NULL,
    [ObjectId] [nvarchar](max) NOT NULL,
    CONSTRAINT [PK_CardWidgets.PropertyChangeDetailHistory] PRIMARY KEY ([Id], [Version])
)
CREATE TABLE [dbo].[SequenceData] (
    [TableName] [nvarchar](128) NOT NULL,
    [SequenceValue] [int] NOT NULL,
    CONSTRAINT [PK_dbo.SequenceData] PRIMARY KEY ([TableName])
)
CREATE TABLE [GraphiteGTCCore].[Spinner] (
    [Id] [int] NOT NULL IDENTITY,
    [Description] [nvarchar](max) NOT NULL,
    [EventRegistrationId] [int] NOT NULL,
    [TimeStamp] rowversion,
    [ObjectId] [nvarchar](40) NOT NULL,
    CONSTRAINT [PK_GraphiteGTCCore.Spinner] PRIMARY KEY ([Id])
)
CREATE TABLE [GraphiteGTCCore].[SpinnerHistory] (
    [Id] [int] NOT NULL,
    [Version] [int] NOT NULL,
    [Description] [nvarchar](max),
    [EventRegistrationId] [int] NOT NULL,
    [Operation] [nvarchar](max) NOT NULL,
    [TimeStamp] [varbinary](max) NOT NULL,
    [ObjectId] [nvarchar](max) NOT NULL,
    CONSTRAINT [PK_GraphiteGTCCore.SpinnerHistory] PRIMARY KEY ([Id], [Version])
)
CREATE TABLE [CardWidgets].[ThemeHistory] (
    [Id] [int] NOT NULL,
    [Version] [int] NOT NULL,
    [Description] [nvarchar](max),
    [EventRegistrationId] [int] NOT NULL,
    [Operation] [nvarchar](max) NOT NULL,
    [TimeStamp] [varbinary](max) NOT NULL,
    [ObjectId] [nvarchar](max) NOT NULL,
    CONSTRAINT [PK_CardWidgets.ThemeHistory] PRIMARY KEY ([Id], [Version])
)
CREATE TABLE [CardWidgets].[UserHistory] (
    [Id] [int] NOT NULL,
    [Version] [int] NOT NULL,
    [LanguageId] [int],
    [ThemeId] [int],
    [Username] [nvarchar](max),
    [ActiveId] [int],
    [PersonId] [int],
    [EventRegistrationId] [int] NOT NULL,
    [Operation] [nvarchar](max) NOT NULL,
    [TimeStamp] [varbinary](max) NOT NULL,
    [ObjectId] [nvarchar](max) NOT NULL,
    CONSTRAINT [PK_CardWidgets.UserHistory] PRIMARY KEY ([Id], [Version])
)
CREATE TABLE [GraphiteGTCCore].[YesNoQuestionHistory] (
    [Id] [int] NOT NULL,
    [Version] [int] NOT NULL,
    [Description] [nvarchar](max),
    [EventRegistrationId] [int] NOT NULL,
    [Operation] [nvarchar](max) NOT NULL,
    [TimeStamp] [varbinary](max) NOT NULL,
    [ObjectId] [nvarchar](max) NOT NULL,
    CONSTRAINT [PK_GraphiteGTCCore.YesNoQuestionHistory] PRIMARY KEY ([Id], [Version])
)
CREATE INDEX [IX_EventRegistrationId] ON [GraphiteGTCCore].[Comparison]([EventRegistrationId])
CREATE INDEX [IX_EventProcessId] ON [dbo].[EventRegistration]([EventProcessId])
CREATE INDEX [IX_AddedByUserId] ON [dbo].[EventRegistration]([AddedByUserId])
CREATE INDEX [IX_ModifiedByUserId] ON [dbo].[EventRegistration]([ModifiedByUserId])
CREATE INDEX [IX_ExecutedByUserId] ON [dbo].[EventRegistration]([ExecutedByUserId])
CREATE INDEX [IX_ScheduledByEventRegistrationId] ON [dbo].[EventRegistration]([ScheduledByEventRegistrationId])
CREATE INDEX [IX_ReversedEventRegistrationId] ON [dbo].[EventRegistration]([ReversedEventRegistrationId])
CREATE INDEX [IX_ResetToPendingEventRegistrationId] ON [dbo].[EventRegistration]([ResetToPendingEventRegistrationId])
CREATE INDEX [IX_LanguageId] ON [CardWidgets].[User]([LanguageId])
CREATE INDEX [IX_ThemeId] ON [CardWidgets].[User]([ThemeId])
CREATE INDEX [IX_ActiveId] ON [CardWidgets].[User]([ActiveId])
CREATE INDEX [IX_PersonId] ON [CardWidgets].[User]([PersonId])
CREATE INDEX [IX_EventRegistrationId] ON [CardWidgets].[User]([EventRegistrationId])
CREATE INDEX [IX_EventRegistrationId] ON [GraphiteGTCCore].[YesNoQuestion]([EventRegistrationId])
CREATE INDEX [IX_EventRegistrationId] ON [GraphiteGTCCore].[Language]([EventRegistrationId])
CREATE INDEX [IX_EventRegistrationId] ON [GraphiteGTCCore].[Person]([EventRegistrationId])
CREATE INDEX [IX_EventRegistrationId] ON [CardWidgets].[Theme]([EventRegistrationId])
CREATE INDEX [IX_EventRegistrationId] ON [dbo].[EventProcess]([EventRegistrationId])
CREATE INDEX [IX_IsErrorId] ON [dbo].[ValidationResult]([IsErrorId])
CREATE INDEX [IX_IsSuppressedId] ON [dbo].[ValidationResult]([IsSuppressedId])
CREATE INDEX [IX_IsOverriddenId] ON [dbo].[ValidationResult]([IsOverriddenId])
CREATE INDEX [IX_IsOverridableId] ON [dbo].[ValidationResult]([IsOverridableId])
CREATE INDEX [IX_OverriddenByUserId] ON [dbo].[ValidationResult]([OverriddenByUserId])
CREATE INDEX [IX_EventRegistrationId] ON [dbo].[ValidationResult]([EventRegistrationId])
CREATE INDEX [IX_EventRegistrationId] ON [GraphiteGTCCore].[ComparisonHistory]([EventRegistrationId])
CREATE INDEX [IX_EventRegistrationId] ON [GraphiteGTCCore].[CurrencyDefinition]([EventRegistrationId])
CREATE INDEX [IX_EventRegistrationId] ON [GraphiteGTCCore].[CurrencyDefinitionHistory]([EventRegistrationId])
CREATE INDEX [IX_EventRegistrationId] ON [dbo].[EventProcessHistory]([EventRegistrationId])
CREATE INDEX [IX_EventRegistrationId] ON [GraphiteGTCCore].[LanguageHistory]([EventRegistrationId])
CREATE INDEX [IX_EventRegistrationId] ON [CardWidgets].[PageChoice]([EventRegistrationId])
CREATE INDEX [IX_EventRegistrationId] ON [CardWidgets].[PageChoiceHistory]([EventRegistrationId])
CREATE INDEX [IX_EventRegistrationId] ON [GraphiteGTCCore].[PersonHistory]([EventRegistrationId])
CREATE INDEX [IX_ExecutedByUserId] ON [CardWidgets].[PropertyChangeDetail]([ExecutedByUserId])
CREATE INDEX [IX_EventRegistrationId] ON [CardWidgets].[PropertyChangeDetail]([EventRegistrationId])
CREATE INDEX [IX_EventRegistrationId] ON [CardWidgets].[PropertyChangeDetailHistory]([EventRegistrationId])
CREATE INDEX [IX_EventRegistrationId] ON [GraphiteGTCCore].[Spinner]([EventRegistrationId])
CREATE INDEX [IX_EventRegistrationId] ON [GraphiteGTCCore].[SpinnerHistory]([EventRegistrationId])
CREATE INDEX [IX_EventRegistrationId] ON [CardWidgets].[ThemeHistory]([EventRegistrationId])
CREATE INDEX [IX_EventRegistrationId] ON [CardWidgets].[UserHistory]([EventRegistrationId])
CREATE INDEX [IX_EventRegistrationId] ON [GraphiteGTCCore].[YesNoQuestionHistory]([EventRegistrationId])
ALTER TABLE [GraphiteGTCCore].[Comparison] ADD CONSTRAINT [FK_GraphiteGTCCore.Comparison_dbo.EventRegistration_EventRegistrationId] FOREIGN KEY ([EventRegistrationId]) REFERENCES [dbo].[EventRegistration] ([EventRegistrationId])
ALTER TABLE [dbo].[EventRegistration] ADD CONSTRAINT [FK_dbo.EventRegistration_CardWidgets.User_AddedByUserId] FOREIGN KEY ([AddedByUserId]) REFERENCES [CardWidgets].[User] ([Id])
ALTER TABLE [dbo].[EventRegistration] ADD CONSTRAINT [FK_dbo.EventRegistration_dbo.EventProcess_EventProcessId] FOREIGN KEY ([EventProcessId]) REFERENCES [dbo].[EventProcess] ([Id])
ALTER TABLE [dbo].[EventRegistration] ADD CONSTRAINT [FK_dbo.EventRegistration_CardWidgets.User_ExecutedByUserId] FOREIGN KEY ([ExecutedByUserId]) REFERENCES [CardWidgets].[User] ([Id])
ALTER TABLE [dbo].[EventRegistration] ADD CONSTRAINT [FK_dbo.EventRegistration_CardWidgets.User_ModifiedByUserId] FOREIGN KEY ([ModifiedByUserId]) REFERENCES [CardWidgets].[User] ([Id])
ALTER TABLE [dbo].[EventRegistration] ADD CONSTRAINT [FK_dbo.EventRegistration_dbo.EventRegistration_ResetToPendingEventRegistrationId] FOREIGN KEY ([ResetToPendingEventRegistrationId]) REFERENCES [dbo].[EventRegistration] ([EventRegistrationId])
ALTER TABLE [dbo].[EventRegistration] ADD CONSTRAINT [FK_dbo.EventRegistration_dbo.EventRegistration_ReversedEventRegistrationId] FOREIGN KEY ([ReversedEventRegistrationId]) REFERENCES [dbo].[EventRegistration] ([EventRegistrationId])
ALTER TABLE [dbo].[EventRegistration] ADD CONSTRAINT [FK_dbo.EventRegistration_dbo.EventRegistration_ScheduledByEventRegistrationId] FOREIGN KEY ([ScheduledByEventRegistrationId]) REFERENCES [dbo].[EventRegistration] ([EventRegistrationId])
ALTER TABLE [CardWidgets].[User] ADD CONSTRAINT [FK_CardWidgets.User_GraphiteGTCCore.YesNoQuestion_ActiveId] FOREIGN KEY ([ActiveId]) REFERENCES [GraphiteGTCCore].[YesNoQuestion] ([Id])
ALTER TABLE [CardWidgets].[User] ADD CONSTRAINT [FK_CardWidgets.User_dbo.EventRegistration_EventRegistrationId] FOREIGN KEY ([EventRegistrationId]) REFERENCES [dbo].[EventRegistration] ([EventRegistrationId])
ALTER TABLE [CardWidgets].[User] ADD CONSTRAINT [FK_CardWidgets.User_GraphiteGTCCore.Language_LanguageId] FOREIGN KEY ([LanguageId]) REFERENCES [GraphiteGTCCore].[Language] ([Id])
ALTER TABLE [CardWidgets].[User] ADD CONSTRAINT [FK_CardWidgets.User_GraphiteGTCCore.Person_PersonId] FOREIGN KEY ([PersonId]) REFERENCES [GraphiteGTCCore].[Person] ([Id])
ALTER TABLE [CardWidgets].[User] ADD CONSTRAINT [FK_CardWidgets.User_CardWidgets.Theme_ThemeId] FOREIGN KEY ([ThemeId]) REFERENCES [CardWidgets].[Theme] ([Id])
ALTER TABLE [GraphiteGTCCore].[YesNoQuestion] ADD CONSTRAINT [FK_GraphiteGTCCore.YesNoQuestion_dbo.EventRegistration_EventRegistrationId] FOREIGN KEY ([EventRegistrationId]) REFERENCES [dbo].[EventRegistration] ([EventRegistrationId])
ALTER TABLE [GraphiteGTCCore].[Language] ADD CONSTRAINT [FK_GraphiteGTCCore.Language_dbo.EventRegistration_EventRegistrationId] FOREIGN KEY ([EventRegistrationId]) REFERENCES [dbo].[EventRegistration] ([EventRegistrationId])
ALTER TABLE [GraphiteGTCCore].[Person] ADD CONSTRAINT [FK_GraphiteGTCCore.Person_dbo.EventRegistration_EventRegistrationId] FOREIGN KEY ([EventRegistrationId]) REFERENCES [dbo].[EventRegistration] ([EventRegistrationId])
ALTER TABLE [CardWidgets].[Theme] ADD CONSTRAINT [FK_CardWidgets.Theme_dbo.EventRegistration_EventRegistrationId] FOREIGN KEY ([EventRegistrationId]) REFERENCES [dbo].[EventRegistration] ([EventRegistrationId])
ALTER TABLE [dbo].[EventProcess] ADD CONSTRAINT [FK_dbo.EventProcess_dbo.EventRegistration_EventRegistrationId] FOREIGN KEY ([EventRegistrationId]) REFERENCES [dbo].[EventRegistration] ([EventRegistrationId])
ALTER TABLE [dbo].[ValidationResult] ADD CONSTRAINT [FK_dbo.ValidationResult_dbo.EventRegistration_EventRegistrationId] FOREIGN KEY ([EventRegistrationId]) REFERENCES [dbo].[EventRegistration] ([EventRegistrationId])
ALTER TABLE [dbo].[ValidationResult] ADD CONSTRAINT [FK_dbo.ValidationResult_GraphiteGTCCore.YesNoQuestion_IsErrorId] FOREIGN KEY ([IsErrorId]) REFERENCES [GraphiteGTCCore].[YesNoQuestion] ([Id])
ALTER TABLE [dbo].[ValidationResult] ADD CONSTRAINT [FK_dbo.ValidationResult_GraphiteGTCCore.YesNoQuestion_IsOverridableId] FOREIGN KEY ([IsOverridableId]) REFERENCES [GraphiteGTCCore].[YesNoQuestion] ([Id])
ALTER TABLE [dbo].[ValidationResult] ADD CONSTRAINT [FK_dbo.ValidationResult_GraphiteGTCCore.YesNoQuestion_IsOverriddenId] FOREIGN KEY ([IsOverriddenId]) REFERENCES [GraphiteGTCCore].[YesNoQuestion] ([Id])
ALTER TABLE [dbo].[ValidationResult] ADD CONSTRAINT [FK_dbo.ValidationResult_GraphiteGTCCore.YesNoQuestion_IsSuppressedId] FOREIGN KEY ([IsSuppressedId]) REFERENCES [GraphiteGTCCore].[YesNoQuestion] ([Id])
ALTER TABLE [dbo].[ValidationResult] ADD CONSTRAINT [FK_dbo.ValidationResult_CardWidgets.User_OverriddenByUserId] FOREIGN KEY ([OverriddenByUserId]) REFERENCES [CardWidgets].[User] ([Id])
ALTER TABLE [GraphiteGTCCore].[ComparisonHistory] ADD CONSTRAINT [FK_GraphiteGTCCore.ComparisonHistory_dbo.EventRegistration_EventRegistrationId] FOREIGN KEY ([EventRegistrationId]) REFERENCES [dbo].[EventRegistration] ([EventRegistrationId])
ALTER TABLE [GraphiteGTCCore].[CurrencyDefinition] ADD CONSTRAINT [FK_GraphiteGTCCore.CurrencyDefinition_dbo.EventRegistration_EventRegistrationId] FOREIGN KEY ([EventRegistrationId]) REFERENCES [dbo].[EventRegistration] ([EventRegistrationId])
ALTER TABLE [GraphiteGTCCore].[CurrencyDefinitionHistory] ADD CONSTRAINT [FK_GraphiteGTCCore.CurrencyDefinitionHistory_dbo.EventRegistration_EventRegistrationId] FOREIGN KEY ([EventRegistrationId]) REFERENCES [dbo].[EventRegistration] ([EventRegistrationId])
ALTER TABLE [dbo].[EventProcessHistory] ADD CONSTRAINT [FK_dbo.EventProcessHistory_dbo.EventRegistration_EventRegistrationId] FOREIGN KEY ([EventRegistrationId]) REFERENCES [dbo].[EventRegistration] ([EventRegistrationId])
ALTER TABLE [GraphiteGTCCore].[LanguageHistory] ADD CONSTRAINT [FK_GraphiteGTCCore.LanguageHistory_dbo.EventRegistration_EventRegistrationId] FOREIGN KEY ([EventRegistrationId]) REFERENCES [dbo].[EventRegistration] ([EventRegistrationId])
ALTER TABLE [CardWidgets].[PageChoice] ADD CONSTRAINT [FK_CardWidgets.PageChoice_dbo.EventRegistration_EventRegistrationId] FOREIGN KEY ([EventRegistrationId]) REFERENCES [dbo].[EventRegistration] ([EventRegistrationId])
ALTER TABLE [CardWidgets].[PageChoiceHistory] ADD CONSTRAINT [FK_CardWidgets.PageChoiceHistory_dbo.EventRegistration_EventRegistrationId] FOREIGN KEY ([EventRegistrationId]) REFERENCES [dbo].[EventRegistration] ([EventRegistrationId])
ALTER TABLE [GraphiteGTCCore].[PersonHistory] ADD CONSTRAINT [FK_GraphiteGTCCore.PersonHistory_dbo.EventRegistration_EventRegistrationId] FOREIGN KEY ([EventRegistrationId]) REFERENCES [dbo].[EventRegistration] ([EventRegistrationId])
ALTER TABLE [CardWidgets].[PropertyChangeDetail] ADD CONSTRAINT [FK_CardWidgets.PropertyChangeDetail_dbo.EventRegistration_EventRegistrationId] FOREIGN KEY ([EventRegistrationId]) REFERENCES [dbo].[EventRegistration] ([EventRegistrationId])
ALTER TABLE [CardWidgets].[PropertyChangeDetail] ADD CONSTRAINT [FK_CardWidgets.PropertyChangeDetail_CardWidgets.User_ExecutedByUserId] FOREIGN KEY ([ExecutedByUserId]) REFERENCES [CardWidgets].[User] ([Id])
ALTER TABLE [CardWidgets].[PropertyChangeDetailHistory] ADD CONSTRAINT [FK_CardWidgets.PropertyChangeDetailHistory_dbo.EventRegistration_EventRegistrationId] FOREIGN KEY ([EventRegistrationId]) REFERENCES [dbo].[EventRegistration] ([EventRegistrationId])
ALTER TABLE [GraphiteGTCCore].[Spinner] ADD CONSTRAINT [FK_GraphiteGTCCore.Spinner_dbo.EventRegistration_EventRegistrationId] FOREIGN KEY ([EventRegistrationId]) REFERENCES [dbo].[EventRegistration] ([EventRegistrationId])
ALTER TABLE [GraphiteGTCCore].[SpinnerHistory] ADD CONSTRAINT [FK_GraphiteGTCCore.SpinnerHistory_dbo.EventRegistration_EventRegistrationId] FOREIGN KEY ([EventRegistrationId]) REFERENCES [dbo].[EventRegistration] ([EventRegistrationId])
ALTER TABLE [CardWidgets].[ThemeHistory] ADD CONSTRAINT [FK_CardWidgets.ThemeHistory_dbo.EventRegistration_EventRegistrationId] FOREIGN KEY ([EventRegistrationId]) REFERENCES [dbo].[EventRegistration] ([EventRegistrationId])
ALTER TABLE [CardWidgets].[UserHistory] ADD CONSTRAINT [FK_CardWidgets.UserHistory_dbo.EventRegistration_EventRegistrationId] FOREIGN KEY ([EventRegistrationId]) REFERENCES [dbo].[EventRegistration] ([EventRegistrationId])
ALTER TABLE [GraphiteGTCCore].[YesNoQuestionHistory] ADD CONSTRAINT [FK_GraphiteGTCCore.YesNoQuestionHistory_dbo.EventRegistration_EventRegistrationId] FOREIGN KEY ([EventRegistrationId]) REFERENCES [dbo].[EventRegistration] ([EventRegistrationId])

-- Create Index IX_ObjectId for table [CardWidgets].[EventProcess]
IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[CardWidgets].[EventProcess]') AND name = N'IX_ObjectId')
      AND EXISTS (SELECT * FROM sys.columns WHERE name = N'ObjectId' and object_id = OBJECT_ID(N'[CardWidgets].[EventProcess]'))
   CREATE UNIQUE NONCLUSTERED INDEX IX_ObjectId ON [CardWidgets].[EventProcess] ([ObjectId])
-- Create Index IX_ObjectId for table [CardWidgets].[PageChoice]
IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[CardWidgets].[PageChoice]') AND name = N'IX_ObjectId')
      AND EXISTS (SELECT * FROM sys.columns WHERE name = N'ObjectId' and object_id = OBJECT_ID(N'[CardWidgets].[PageChoice]'))
   CREATE UNIQUE NONCLUSTERED INDEX IX_ObjectId ON [CardWidgets].[PageChoice] ([ObjectId])
-- Create Index IX_ObjectId for table [CardWidgets].[PropertyChangeDetail]
IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[CardWidgets].[PropertyChangeDetail]') AND name = N'IX_ObjectId')
      AND EXISTS (SELECT * FROM sys.columns WHERE name = N'ObjectId' and object_id = OBJECT_ID(N'[CardWidgets].[PropertyChangeDetail]'))
   CREATE UNIQUE NONCLUSTERED INDEX IX_ObjectId ON [CardWidgets].[PropertyChangeDetail] ([ObjectId])
-- Create Index IX_ObjectId for table [CardWidgets].[Theme]
IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[CardWidgets].[Theme]') AND name = N'IX_ObjectId')
      AND EXISTS (SELECT * FROM sys.columns WHERE name = N'ObjectId' and object_id = OBJECT_ID(N'[CardWidgets].[Theme]'))
   CREATE UNIQUE NONCLUSTERED INDEX IX_ObjectId ON [CardWidgets].[Theme] ([ObjectId])
-- Create Index IX_ObjectId for table [CardWidgets].[User]
IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[CardWidgets].[User]') AND name = N'IX_ObjectId')
      AND EXISTS (SELECT * FROM sys.columns WHERE name = N'ObjectId' and object_id = OBJECT_ID(N'[CardWidgets].[User]'))
   CREATE UNIQUE NONCLUSTERED INDEX IX_ObjectId ON [CardWidgets].[User] ([ObjectId])
-- Create Index IX_ObjectId for table [GraphiteGTCCore].[Comparison]
IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[GraphiteGTCCore].[Comparison]') AND name = N'IX_ObjectId')
      AND EXISTS (SELECT * FROM sys.columns WHERE name = N'ObjectId' and object_id = OBJECT_ID(N'[GraphiteGTCCore].[Comparison]'))
   CREATE UNIQUE NONCLUSTERED INDEX IX_ObjectId ON [GraphiteGTCCore].[Comparison] ([ObjectId])
-- Create Index IX_ObjectId for table [GraphiteGTCCore].[CurrencyDefinition]
IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[GraphiteGTCCore].[CurrencyDefinition]') AND name = N'IX_ObjectId')
      AND EXISTS (SELECT * FROM sys.columns WHERE name = N'ObjectId' and object_id = OBJECT_ID(N'[GraphiteGTCCore].[CurrencyDefinition]'))
   CREATE UNIQUE NONCLUSTERED INDEX IX_ObjectId ON [GraphiteGTCCore].[CurrencyDefinition] ([ObjectId])
-- Create Index IX_ObjectId for table [GraphiteGTCCore].[Language]
IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[GraphiteGTCCore].[Language]') AND name = N'IX_ObjectId')
      AND EXISTS (SELECT * FROM sys.columns WHERE name = N'ObjectId' and object_id = OBJECT_ID(N'[GraphiteGTCCore].[Language]'))
   CREATE UNIQUE NONCLUSTERED INDEX IX_ObjectId ON [GraphiteGTCCore].[Language] ([ObjectId])
-- Create Index IX_ObjectId for table [GraphiteGTCCore].[Person]
IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[GraphiteGTCCore].[Person]') AND name = N'IX_ObjectId')
      AND EXISTS (SELECT * FROM sys.columns WHERE name = N'ObjectId' and object_id = OBJECT_ID(N'[GraphiteGTCCore].[Person]'))
   CREATE UNIQUE NONCLUSTERED INDEX IX_ObjectId ON [GraphiteGTCCore].[Person] ([ObjectId])
-- Create Index IX_ObjectId for table [GraphiteGTCCore].[Spinner]
IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[GraphiteGTCCore].[Spinner]') AND name = N'IX_ObjectId')
      AND EXISTS (SELECT * FROM sys.columns WHERE name = N'ObjectId' and object_id = OBJECT_ID(N'[GraphiteGTCCore].[Spinner]'))
   CREATE UNIQUE NONCLUSTERED INDEX IX_ObjectId ON [GraphiteGTCCore].[Spinner] ([ObjectId])
-- Create Index IX_ObjectId for table [GraphiteGTCCore].[YesNoQuestion]
IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[GraphiteGTCCore].[YesNoQuestion]') AND name = N'IX_ObjectId')
      AND EXISTS (SELECT * FROM sys.columns WHERE name = N'ObjectId' and object_id = OBJECT_ID(N'[GraphiteGTCCore].[YesNoQuestion]'))
   CREATE UNIQUE NONCLUSTERED INDEX IX_ObjectId ON [GraphiteGTCCore].[YesNoQuestion] ([ObjectId])

-- Create DeploymentHistory table.
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[__@DeploymentHistory]')) BEGIN
   CREATE TABLE [dbo].[__@DeploymentHistory] (
      [Id] [int] IDENTITY(1,1) NOT NULL,
      [DataChangeId] [nvarchar](40) NOT NULL,
      [Version] [int] NOT NULL,
      [ProjectName] [nvarchar](max) NOT NULL,
      [EntityIl] [varbinary](max) NOT NULL,
      [HasSecurity] [bit] NOT NULL,
      [ProvidedQualifiedNames] [nvarchar](max) NOT NULL,
      [TargetDatabase] [nvarchar](max) NULL,
      [DeploymentDate] [datetime] NOT NULL
    CONSTRAINT [PK_dbo.__@DeploymentHistory] PRIMARY KEY CLUSTERED
    (
       [Id] ASC,
       [Version] ASC
    )
   ) ON [PRIMARY]
END

GO


CREATE TABLE [dbo].[__MigrationHistory] (
    [MigrationId] [nvarchar](150) NOT NULL,
    [ContextKey] [nvarchar](300) NOT NULL,
    [Model] [varbinary](max) NOT NULL,
    [ProductVersion] [nvarchar](32) NOT NULL,
    CONSTRAINT [PK_dbo.__MigrationHistory] PRIMARY KEY ([MigrationId], [ContextKey])
)
INSERT [dbo].[__MigrationHistory]([MigrationId], [ContextKey], [Model], [ProductVersion])
VALUES (N'201908061724546_AutomaticMigration', N'CardWidgets.Migrations.Configuration',  0x

GO


IF EXISTS (SELECT * FROM SYS.EXTENDED_PROPERTIES WHERE [major_id] = OBJECT_ID(N'GraphiteGTCCore.Comparison') AND [name] = N'MS_Description')
   EXEC sys.sp_updateextendedproperty @name=N'MS_Description', @value=N'An enumeration for comparison', @level0type=N'SCHEMA', @level0name=N'GraphiteGTCCore', @level1type=N'TABLE', @level1name=N'Comparison'
ELSE
   EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An enumeration for comparison', @level0type=N'SCHEMA',@level0name=N'GraphiteGTCCore', @level1type=N'TABLE', @level1name=N'Comparison'
IF EXISTS (SELECT * FROM SYS.EXTENDED_PROPERTIES WHERE [major_id] = OBJECT_ID(N'GraphiteGTCCore.CurrencyDefinition') AND [name] = N'MS_Description')
   EXEC sys.sp_updateextendedproperty @name=N'MS_Description', @value=N'An enumeration listing currency types used in a project', @level0type=N'SCHEMA', @level0name=N'GraphiteGTCCore', @level1type=N'TABLE', @level1name=N'CurrencyDefinition'
ELSE
   EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An enumeration listing currency types used in a project', @level0type=N'SCHEMA',@level0name=N'GraphiteGTCCore', @level1type=N'TABLE', @level1name=N'CurrencyDefinition'
IF EXISTS (SELECT * FROM SYS.EXTENDED_PROPERTIES WHERE [major_id] = OBJECT_ID(N'GraphiteGTCCore.Language') AND [name] = N'MS_Description')
   EXEC sys.sp_updateextendedproperty @name=N'MS_Description', @value=N'An enumeration listing the languages used in a project', @level0type=N'SCHEMA', @level0name=N'GraphiteGTCCore', @level1type=N'TABLE', @level1name=N'Language'
ELSE
   EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An enumeration listing the languages used in a project', @level0type=N'SCHEMA',@level0name=N'GraphiteGTCCore', @level1type=N'TABLE', @level1name=N'Language'
IF EXISTS (SELECT * FROM SYS.EXTENDED_PROPERTIES WHERE [major_id] = OBJECT_ID(N'GraphiteGTCCore.Person') AND [name] = N'MS_Description')
   EXEC sys.sp_updateextendedproperty @name=N'MS_Description', @value=N'An entity providing basic properties of an individual', @level0type=N'SCHEMA', @level0name=N'GraphiteGTCCore', @level1type=N'TABLE', @level1name=N'Person'
ELSE
   EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An entity providing basic properties of an individual', @level0type=N'SCHEMA',@level0name=N'GraphiteGTCCore', @level1type=N'TABLE', @level1name=N'Person'
IF EXISTS (SELECT * FROM SYS.EXTENDED_PROPERTIES WHERE [major_id] = OBJECT_ID(N'CardWidgets.PropertyChangeDetail') AND [name] = N'MS_Description')
   EXEC sys.sp_updateextendedproperty @name=N'MS_Description', @value=N'A system entity that can used to get a value of a property before and after an Event', @level0type=N'SCHEMA', @level0name=N'CardWidgets', @level1type=N'TABLE', @level1name=N'PropertyChangeDetail'
ELSE
   EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A system entity that can used to get a value of a property before and after an Event', @level0type=N'SCHEMA',@level0name=N'CardWidgets', @level1type=N'TABLE', @level1name=N'PropertyChangeDetail'
IF EXISTS (SELECT * FROM SYS.EXTENDED_PROPERTIES WHERE [major_id] = OBJECT_ID(N'GraphiteGTCCore.Spinner') AND [name] = N'MS_Description')
   EXEC sys.sp_updateextendedproperty @name=N'MS_Description', @value=N'An enumeration listing the spin wheel choices', @level0type=N'SCHEMA', @level0name=N'GraphiteGTCCore', @level1type=N'TABLE', @level1name=N'Spinner'
ELSE
   EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An enumeration listing the spin wheel choices', @level0type=N'SCHEMA',@level0name=N'GraphiteGTCCore', @level1type=N'TABLE', @level1name=N'Spinner'
IF EXISTS (SELECT * FROM SYS.EXTENDED_PROPERTIES WHERE [major_id] = OBJECT_ID(N'CardWidgets.Theme') AND [name] = N'MS_Description')
   EXEC sys.sp_updateextendedproperty @name=N'MS_Description', @value=N'An enumeration listing the themes available in a project', @level0type=N'SCHEMA', @level0name=N'CardWidgets', @level1type=N'TABLE', @level1name=N'Theme'
ELSE
   EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An enumeration listing the themes available in a project', @level0type=N'SCHEMA',@level0name=N'CardWidgets', @level1type=N'TABLE', @level1name=N'Theme'
IF EXISTS (SELECT * FROM SYS.EXTENDED_PROPERTIES WHERE [major_id] = OBJECT_ID(N'CardWidgets.User') AND [name] = N'MS_Description')
   EXEC sys.sp_updateextendedproperty @name=N'MS_Description', @value=N'An entity that provides some basic properties to persist Users in a application', @level0type=N'SCHEMA', @level0name=N'CardWidgets', @level1type=N'TABLE', @level1name=N'User'
ELSE
   EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An entity that provides some basic properties to persist Users in a application', @level0type=N'SCHEMA',@level0name=N'CardWidgets', @level1type=N'TABLE', @level1name=N'User'
IF EXISTS (SELECT * FROM SYS.EXTENDED_PROPERTIES WHERE [major_id] = OBJECT_ID(N'GraphiteGTCCore.YesNoQuestion') AND [name] = N'MS_Description')
   EXEC sys.sp_updateextendedproperty @name=N'MS_Description', @value=N'An enumeration that provides support for a boolean like functionality', @level0type=N'SCHEMA', @level0name=N'GraphiteGTCCore', @level1type=N'TABLE', @level1name=N'YesNoQuestion'
ELSE
   EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An enumeration that provides support for a boolean like functionality', @level0type=N'SCHEMA',@level0name=N'GraphiteGTCCore', @level1type=N'TABLE', @level1name=N'YesNoQuestion'
]]></Script>
</DataChangeDefinition>